Interface Segregation Principle
- interfaces should not force classes to implement what they can't do
- large interfaces should be divided into small ones

interface MultiFunctionDevice {
    void print();
    void scan();
    void fax();
}

class OldPrinter implements MultiFunctionDevice {
    public void print() {
        System.out.println("Printing...");
    }

    public void scan() {
        throw new UnsupportedOperationException("Scan not supported");
    }

    public void fax() {
        throw new UnsupportedOperationException("Fax not supported");
    }
}


Problem: OldPrinter is forced to implement scan() and fax() even though it doesnâ€™t support those features.

interface Printer {
    void print();
}

interface Scanner {
    void scan();
}

interface FaxMachine {
    void fax();
}

class BasicPrinter implements Printer {
    public void print() {
        System.out.println("Printing...");
    }
}

class AdvancedPrinter implements Printer, Scanner, FaxMachine {
    public void print() {
        System.out.println("Printing...");
    }

    public void scan() {
        System.out.println("Scanning...");
    }

    public void fax() {
        System.out.println("Faxing...");
    }
}
